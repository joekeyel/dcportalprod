{"version":3,"sources":["assets/img/brand/telekom.png","assets/img/brand/sygnet.svg","containers/DefaultLayout/DefaultHeader.js"],"names":["module","exports","DefaultHeader","props","state","inboxlist","PendingApproval","PendingTask","openSnackBar","userFullName","userID","this","fetchUpAsync","fetchInboxList","user","inbox","setState","map","u","NAME","Object","values","t","TYPE","dataInventory","filter","dataTask","event","reason","children","length","task","pendingApproval","localStorage","getItem","toUpperCase","Fragment","className","display","mobile","full","src","logo","width","height","alt","minimized","sygnet","navbar","to","pill","color","nav","direction","id","auth","authenticated","username","name","value","Avatar","getRandomColor","size","round","right","header","tag","action","href","onClick","MenuSelected","e","onLogout","style","marginBottom","open","autoHideDuration","onClose","handleClose","bind","anchorOrigin","vertical","horizontal","variant","severity","Component","defaultProps","connect","dispatch","type"],"mappings":"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","file":"static/js/107.486eae9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telekom.cbf40d33.png\";","module.exports = __webpack_public_path__ + \"static/media/sygnet.dba7f081.svg\";","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Badge,Row, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar'; \r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\r\nimport logo from '../../assets/img/brand/telekom.png'\r\nimport sygnet from '../../assets/img/brand/sygnet.svg'\r\nimport auth from '../../../src/auth';\r\nimport Avatar from 'react-avatar';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      inboxlist: [],\r\n      PendingApproval: [],\r\n      PendingTask: [],\r\n      openSnackBar: false,\r\n      userFullName: \"\",\r\n      userID: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n  \r\n    this.props.fetchUpAsync();\r\n    this.props.fetchInboxList();\r\n  \r\n    //console.log('login',username1,password);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props){\r\n    //console.log('inbox',props.inboxlist);\r\n    //console.log('users',props.user);\r\n    const user = props.user;\r\n    const inbox = props.inboxlist;\r\n    this.setState({\r\n      inboxlist: inbox\r\n    })\r\n\r\n    if(user.user){\r\n      user.user.map((u)=>{\r\n        this.setState({\r\n          userFullName: u.NAME\r\n        })\r\n      })\r\n    }\r\n   \r\n    Object.values(inbox).map((t)=>{\r\n      if(t.TYPE === 'INVENTORY'){\r\n        var dataInventory = Object.values(inbox).filter(u => u.TYPE === 'INVENTORY');\r\n        //console.log('INVENTORY',dataInventory);\r\n        this.setState({\r\n          PendingApproval: dataInventory,\r\n          openSnackBar: true\r\n        })\r\n      }\r\n      if(t.TYPE === 'TASK'){\r\n        var dataTask = Object.values(inbox).filter(u => u.TYPE === 'TASK');\r\n        this.setState({\r\n          PendingTask: dataTask,\r\n          openSnackBar: true\r\n        })\r\n      }\r\n  \r\n    })\r\n \r\n  }\r\n\r\n  handleClose(event, reason){\r\n\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    this.setState({\r\n      openSnackBar: false\r\n    })\r\n   \r\n  \r\n  };\r\n  render() {\r\n   // console.log('render',this.state);\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n    const inboxlist = this.state.inboxlist.length\r\n    const task = this.state.PendingTask ? this.state.PendingTask.length : 0;\r\n    const pendingApproval = this.state.PendingApproval ? this.state.PendingApproval.length : 0;\r\n    const userID = localStorage.getItem('username').toUpperCase();\r\n    return (\r\n      <React.Fragment>\r\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\r\n        <AppNavbarBrand\r\n          full={{ src: logo, width: 75, height: 25, alt: 'CoreUI Logo' }}\r\n          minimized={{ src: sygnet, width: 30, height: 30, alt: 'CoreUI Logo' }}\r\n        />\r\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\r\n\r\n        <Nav className=\"d-md-down-none\" navbar>\r\n          <NavItem className=\"px-3\">\r\n            <NavLink to=\"/main-menu\" className=\"nav-link\" > Main Menu</NavLink>\r\n          </NavItem>\r\n          {/* <NavItem className=\"px-3\">\r\n            <Link to=\"/users\" className=\"nav-link\">Users</Link>\r\n          </NavItem>\r\n          <NavItem className=\"px-3\">\r\n            <NavLink to=\"#\" className=\"nav-link\">Settings</NavLink>\r\n          </NavItem> */}\r\n        </Nav>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem className=\"d-md-down-none\">\r\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-bell\"></i><Badge pill color=\"danger\">{inboxlist}</Badge></NavLink>\r\n          </NavItem>\r\n          \r\n          {/* <NavItem className=\"d-md-down-none\">\r\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-list\"></i></NavLink>\r\n          </NavItem>\r\n          <NavItem className=\"d-md-down-none\">\r\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-location-pin\"></i></NavLink>\r\n          </NavItem> */}\r\n          <UncontrolledDropdown nav direction=\"down\">\r\n            <DropdownToggle nav>\r\n              <span id={auth.authenticated.username.toUpperCase()} >{this.state.userFullName}</span>\r\n              {/* <img src={'../../assets/img/avatars/telekom.png'} className=\"img-avatar\" /> */}\r\n              <Avatar name={this.state.userFullName} value={this.state.userFullName ? this.state.userFullName : 'TM'} color={Avatar.getRandomColor('sitebase', ['red', 'green', 'blue'])} size=\"40\" round={true} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Account</strong></DropdownItem>\r\n              {/* <DropdownItem><i className=\"fa fa-bell-o\"></i> Updates<Badge color=\"info\">42</Badge></DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-envelope-o\"></i> Messages<Badge color=\"success\">42</Badge></DropdownItem> */}\r\n              <DropdownItem action tag=\"a\" href=\"#/taskList\"><i className=\"fa fa-tasks\"></i> Tasks<Badge color=\"danger\">{task}</Badge></DropdownItem>\r\n              <DropdownItem action tag=\"a\" href=\"#/pendingApproval\"\r\n               onClick={() => {\r\n                auth.MenuSelected('task',userID,() => {\r\n                //this.props.history.push(\"/\");\r\n                });\r\n            }} \r\n              ><i className=\"fa fa-bell-o\"></i>Pending Approval<Badge color=\"warning\"> {pendingApproval}</Badge></DropdownItem>\r\n               {/*<DropdownItem header tag=\"div\" className=\"text-center\"><strong>Settings</strong></DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-user\"></i> Profile</DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-wrench\"></i> Settings</DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-usd\"></i> Payments<Badge color=\"secondary\">42</Badge></DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-file\"></i> Projects<Badge color=\"primary\">42</Badge></DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem><i className=\"fa fa-shield\"></i> Lock Account</DropdownItem> */}\r\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\r\n        {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\r\n        \r\n        <Snackbar style={{marginBottom:'50px'}}\r\n          open={this.state.openSnackBar} autoHideDuration={1500} onClose={this.handleClose.bind(this)} \r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n            <Alert variant=\"filled\"  onClose={this.handleClose.bind(this)}  severity=\"info\" >\r\n                You have {pendingApproval} Pending Approval.\r\n            </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n          open={this.state.openSnackBar} autoHideDuration={1500} onClose={this.handleClose.bind(this)} \r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n            <Alert variant=\"filled\"  onClose={this.handleClose.bind(this)}  severity=\"info\" >\r\n                You have {task} Pending Task.\r\n            </Alert>\r\n      </Snackbar>\r\n      \r\n      </React.Fragment>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nDefaultHeader.propTypes = propTypes;\r\nDefaultHeader.defaultProps = defaultProps;\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    inboxlist: state.inboxlist\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n\r\n    fetchUpAsync: () => dispatch({ type: \"FETCH_USER\"}),\r\n    fetchInboxList: () => dispatch({ type: \"FETCH_INBOXLIST\"}),\r\n  \r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispachToProps)(DefaultHeader);\r\n"],"sourceRoot":""}